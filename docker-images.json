{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": "Preset for use with all of Renovate's renovate/* docker images",
  "extends": [
    "config:base",
    ":rebaseStalePrs",
    ":masterIssue",
    ":semanticCommits",
    ":semanticCommitScope(deps)",
    "docker:enableMajor"
  ],
  "assignees": ["viceice"],
  "automergeType": "branch",
  "prCreation": "not-pending",
  "docker": {
    "pinDigests": true
  },
  "packageRules": [
    {
      "updateTypes": ["major"],
      "extends": [":masterIssueApproval"]
    },
    {
      "description": "Automerge non-major updates",
      "updateTypes": ["minor", "patch", "digest"],
      "automerge": true
    },
    {
      "description": "Enable docker major updates",
      "datasources": ["docker"],
      "updateTypes": ["major"],
      "enabled": true
    },
    {
      "description": "Automerge ubuntu digest updates (usually security patches)",
      "datasources": ["docker"],
      "packageNames": ["amd64/ubuntu", "ubuntu"],
      "updateTypes": ["pin", "digest"],
      "automerge": true
    },
    {
      "description": "Disable ubuntu minor updates",
      "datasources": ["docker"],
      "packageNames": ["amd64/ubuntu", "ubuntu"],
      "updateTypes": ["minor"],
      "enabled": false
    },
    {
      "depTypeList": ["devDependencies"],
      "updateTypes": ["pin", "digest", "patch", "minor"],
      "automerge": true,
      "masterIssueApproval": false
    },
    {
      "description": "Auto aprove any renovate dependencies",
      "packageNames": ["renovate"],
      "packagePatterns": ["^renovate/"],
      "masterIssueApproval": false
    },
    {
      "description": "Automerge renovate minor and lower updates",
      "packageNames": ["renovate"],
      "packagePatterns": ["^renovate/"],
      "updateTypes": ["pin", "digest", "patch", "minor"],
      "automerge": true,
      "separateMinorPatch": false
    },
    {
      "packageNames": ["prettier"],
      "packagePatterns": ["^@prettier\\/", "^prettier-plugin-"],
      "groupName": "prettier packages"
    }
  ],
  "regexManagers": [
    {
      "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>.+?)(?: versioning=(?<versioning>[a-z-]+?))?\\s(?:ENV|ARG) .+?_VERSION=(?<currentValue>.+?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?)(?: lookupName=(?<lookupName>.+?))?(?: versioning=(?<versioning>[a-z-]+?))?\\sRUN install-[a-z]+? (?<depName>[a-z-]+?) (?<currentValue>.+?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "fileMatch": ["\\.sh$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?) depName=(?<depName>.+?)(?: versioning=(?<versioning>[a-z-]+?))?\\s[A-Z_]+?_VERSION=(?<currentValue>.+?)\\s"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    },
    {
      "fileMatch": ["^builder.json$"],
      "matchStrings": [
        "\"image\"=\"(?<image>[a-z-]+?)\"\\s,\\s\"datasource\"=\"(?<datasource>[a-z-]+?)\"(?:\\s,\\s\"depName\"=\"(?<depName>[a-z-]+?)\")?(?:\\s,\\s\"versioning\"=\"(?<versioning>[a-z-]+?)\")?(?:\\s,\\s\"latestVersion\"=\"(?<latestVersion>.+?)\")?"
      ],
      "depName": "{{#if depName}}{{depName}}{{else}}{{image}}{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
    }
  ]
}
